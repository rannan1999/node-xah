#!/usr/bin/env sh

echo "generate_random_name() {
    local length=$1
    openssl rand -base64 48 | tr -dc 'a-z0-9' | head -c "$length"
}

# Generate variable names dynamically
declare -A var_names
var_names=(
    ["NZ_SRV"]=$(generate_random_name 8)
    ["NZ_KEY"]=$(generate_random_name 8)
    ["SRV_PORT"]=$(generate_random_name 8)
    ["UID"]=$(generate_random_name 8)
    ["TN_DOM"]=$(generate_random_name 8)
    ["TN_TKN"]=$(generate_random_name 8)
    ["CF_ADDR"]=$(generate_random_name 8)
    ["CF_PORT"]=$(generate_random_name 8)
    ["INST_NAME"]=$(generate_random_name 8)
    ["TN_PRT"]=$(generate_random_name 8)
)

# Environment variables
export "${var_names[NZ_SRV]}"="${${var_names[NZ_SRV]}:-nezha.mingfei1981.eu.org:443}"
export "${var_names[NZ_KEY]}"="${${var_names[NZ_KEY]}:-pQw9zGiNCI7MPdTcVB}"
export "${var_names[SRV_PORT]}"="${${var_names[SRV_PORT]}:-${PORT:-7860}}"
export "${var_names[UID]}"="${${var_names[UID]}:-faacf142-dee8-48c2-8558-641123eb939c}"
export "${var_names[TN_DOM]}"="${${var_names[TN_DOM]}:-wavehost.mingfei1982.eu.org}"
export "${var_names[TN_TKN]}"="${${var_names[TN_TKN]}:-eyJhIjoiMGYxNTA1MzUwOTRjNDhlZjNmM2ZjZTA2M2E4N2M1N2YiLCJ0IjoiMjVjNDRiNjUtMmNhMS00NzNkLWExMzctYWZlMDEzN2IzOTgyIiwicyI6IlpXUTFZVFZrWlRZdE56TTVPQzAwTkdJNExXSTRNamN0TTJZMVpEazRZMlUyTldSaCJ9}"
export "${var_names[CF_ADDR]}"="${${var_names[CF_ADDR]}:-skk.moe}"
export "${var_names[CF_PORT]}"="${${var_names[CF_PORT]}:-443}"
export "${var_names[INST_NAME]}"="${${var_names[INST_NAME]}:-MJJ}"
export "${var_names[TN_PRT]}"="${${var_names[TN_PRT]}:-8001}"

RANDOM_WEB_NAME=$(generate_random_name 8)
RANDOM_NPM_NAME=$(generate_random_name 8)
RANDOM_BOT_NAME=$(generate_random_name 8)

download_file() {
    url=$1
    output=$2
    curl -sL "$url" -o "$output"
    if [ $? -ne 0 ]; then
        echo "Failed to download $output, please check the network connection and download link."
        exit 1
    fi
}

ARCH=$(uname -m)
if [ "$ARCH" == "arm" ] || [ "$ARCH" == "arm64" ] || [ "$ARCH" == "aarch64" ]; then
    download_file "https://github.com/babama1001980/good/releases/download/npc/armsb" "$RANDOM_WEB_NAME"
    download_file "https://github.com/babama1001980/good/releases/download/npc/arm64agent" "$RANDOM_NPM_NAME"
    download_file "https://github.com/babama1001980/good/releases/download/npc/arm642go" "$RANDOM_BOT_NAME"
elif [ "$ARCH" == "amd64" ] || [ "$ARCH" == "x86_64" ] || [ "$ARCH" == "x86" ]; then
    download_file "https://github.com/babama1001980/good/releases/download/npc/amdsb" "$RANDOM_WEB_NAME"
    download_file "https://github.com/babama1001980/good/releases/download/npc/amd64agent" "$RANDOM_NPM_NAME"
    download_file "https://github.com/babama1001980/good/releases/download/npc/amd642go" "$RANDOM_BOT_NAME"
else
    echo "Unsupported architecture: $ARCH"
    exit 1
fi

chmod +x "$RANDOM_WEB_NAME" "$RANDOM_NPM_NAME" "$RANDOM_BOT_NAME"

{
    openssl ecparam -genkey -name prime256v1 -out "private.key"
    openssl req -new -x509 -days 36500 -key "private.key" -out "cert.pem" -subj "/CN=bing.com"
} > /dev/null 2>&1

tunnel_configure() {
  if [[ -z ${var_names[TN_TKN]} || -z ${var_names[TN_DOM]} ]]; then
    return
  fi

  if [[ ${var_names[TN_TKN]} =~ TunnelSecret ]]; then
    echo "${var_names[TN_TKN]}" > tunnel.json
    cat > tunnel.yml << EOF
tunnel: $(cut -d\" -f12 <<< "${var_names[TN_TKN]}")
credentials-file: tunnel.json
protocol: http2

ingress:
  - hostname: ${var_names[TN_DOM]}
    service: http://localhost:${var_names[TN_PRT]}
    originRequest:
      noTLSVerify: true
  - service: http_status:404
EOF
  fi
}
tunnel_configure

cat > config.json <<EOL
{
  "log": {
    "disabled": true,
    "level": "info",
    "timestamp": true
  },
  "dns": {
    "servers": [
      {
        "tag": "google",
        "address": "tls://8.8.8.8",
        "strategy": "ipv4_only",
        "detour": "direct"
      }
    ],
    "rules": [
      {
        "rule_set": [
          "geosite-openai"
        ],
        "server": "wireguard"
      },
      {
        "rule_set": [
          "geosite-netflix"
        ],
        "server": "wireguard"
      },
      {
        "rule_set": [
          "geosite-category-ads-all"
        ],
        "server": "block"
      }
    ],
    "final": "google",
    "strategy": "",
    "disable_cache": false,
    "disable_expire": false
  },
  "inbounds": [
    {
      "tag": "vmess-ws-in",
      "type": "vmess",
      "listen": "::",
      "listen_port": ${var_names[TN_PRT]},
      "users": [
        {
          "uuid": "${var_names[UID]}"
        }
      ],
      "transport": {
        "type": "ws",
        "path": "/vmess-tunnel",
        "early_data_header_name": "Sec-WebSocket-Protocol"
      }
    },
    {
       "tag": "hysteria-in",
       "type": "hysteria2",
       "listen": "::",
       "listen_port": ${var_names[SRV_PORT]},
       "users": [
         {
             "password": "${var_names[UID]}"
         }
       ],
       "masquerade": "https://bing.com",
       "tls": {
         "enabled": true,
         "alpn": [
           "h3"
         ],
         "certificate_path": "cert.pem",
         "key_path": "private.key"
       }
    }
  ],
  "outbounds": [
    {
      "type": "direct",
      "tag": "direct"
    },
    {
      "type": "block",
      "tag": "block"
    },
    {
      "type": "dns",
      "tag": "dns-out"
    },
    {
      "type": "wireguard",
      "tag": "wireguard-out",
      "server": "162.159.195.100",
      "server_port": 4500,
      "local_address": [
        "172.16.0.2/32",
        "2606:4700:110:83c7:b31f:5858:b3a8:c6b1/128"
      ],
      "private_key": "mPZo+V9qlrMGCZ7+E6z2NI6NOV34PD++TpAR09PtCWI=",
      "peer_public_key": "bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo=",
      "reserved": [
        26,
        21,
        228
      ]
    }
  ],
  "route": {
    "rules": [
      {
        "protocol": "dns",
        "outbound": "dns-out"
      },
      {
        "ip_is_private": true,
        "outbound": "direct"
      },
      {
        "rule_set": [
          "geosite-openai"
        ],
        "outbound": "wireguard-out"
      },
      {
        "rule_set": [
          "geosite-netflix"
        ],
        "outbound": "wireguard-out"
      },
      {
        "rule_set": [
          "geosite-category-ads-all"
        ],
        "outbound": "block"
      }
    ],
    "rule_set": [
      {
        "tag": "geosite-netflix",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/SagerNet/sing-geosite/rule-set/geosite-netflix.srs",
        "download_detour": "direct"
      },
      {
        "tag": "geosite-openai",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/openai.srs",
        "download_detour": "direct"
      },
      {
        "tag": "geosite-category-ads-all",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/SagerNet/sing-geosite/rule-set/geosite-category-ads-all.srs",
        "download_detour": "direct"
      }
    ],
    "final": "direct"
  },
  "experimental": {
    "cache_file": {
      "path": "cache.db",
      "cache_id": "mycacheid",
      "store_fakeip": true
    }
  }
}
EOL

./"$RANDOM_WEB_NAME" run -c config.json > /dev/null 2>&1 &
nohup ./"$RANDOM_NPM_NAME" -s "${var_names[NZ_SRV]}" -p "${var_names[NZ_KEY]}" --tls > /dev/null 2>&1 &

if [ -e "$RANDOM_BOT_NAME" ]; then
    if [[ ${var_names[TN_TKN]} =~ ^[A-Z0-9a-z=]{120,250}$ ]]; then
      args="tunnel --edge-ip-version auto --no-autoupdate --protocol http2 run --token ${var_names[TN_TKN]}"
    elif [[ ${var_names[TN_TKN]} =~ TunnelSecret ]]; then
      args="tunnel --edge-ip-version auto --config tunnel.yml run"
    else
      args="tunnel --edge-ip-version auto --no-autoupdate --protocol http2 --logfile boot.log --loglevel info --url http://localhost:${var_names[TN_PRT]}"
    fi
    nohup ./"$RANDOM_BOT_NAME" $args >/dev/null 2>&1 &
    sleep 2
fi

get_tundomain() {
  if [[ -n ${var_names[TN_TKN]} ]]; then
    echo "${var_names[TN_DOM]}"
  else
    local retry=0
    local max_retries=6
    local tundomain=""
    while [[ $retry -lt $max_retries ]]; do
      ((retry++))
      tundomain=$(sed -n 's|.*https://\([^/]*trycloudflare\.com\).*|\1|p' boot.log)
      if [[ -n $tundomain ]]; then
        break
      fi
      sleep 1
    done
    echo "$tundomain"
  fi
}

tundomain=$(get_tundomain)

{
    ipv4=$(curl -s ipv4.ip.sb)
    if [ -n "$ipv4" ]; then
        HOST_IP="$ipv4"
    else
        ipv6=$(curl -s --max-time 1 ipv6.ip.sb)
        if [ -n "$ipv6" ]; then
            HOST_IP="$ipv6"
        else
            echo "Failed to acquire server IP, exiting."
            exit 1
        fi
    fi
} > /dev/null 2>&1

ISP=$(curl -s https://speed.cloudflare.com/meta | awk -F\" '{print $26"-"$18}' | sed -e 's/ /_/g')

cat << EOF > sub.txt
hysteria2://${var_names[UID]}@$HOST_IP:${var_names[SRV_PORT]}/?sni=www.bing.com&alpn=h3&insecure=1#$ISP
vmess://$(echo "{ \"v\": \"2\", \"ps\": \"${var_names[INST_NAME]}-$ISP\", \"add\": \"${var_names[CF_ADDR]}\", \"port\": \"${var_names[CF_PORT]}\", \"id\": \"${var_names[UID]}\", \"aid\": \"0\", \"scy\": \"none\", \"net\": \"ws\", \"type\": \"none\", \"host\": \"$tundomain\", \"path\": \"/vmess-tunnel?ed=2048\", \"tls\": \"tls\", \"sni\": \"$tundomain\", \"alpn\": \"\", \"fp\": \"\"}" | base64 -w0)
EOF

base64 -w0 sub.txt > sub_encoded.txt
mv sub_encoded.txt sub.txt

rm -rf "$RANDOM_WEB_NAME" "$RANDOM_NPM_NAME" "$RANDOM_BOT_NAME" config.json private.key cert.pem boot.log tunnel.json tunnel.yml sub.txt


tail -f /dev/null" | base64 -d | bash
